name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build and Test
        run: ./gradlew build -DRELEASE_SIGNING_ENABLED=false

  publishDocs:
    name: Publish Docs
    if: github.event_name == 'push' && contains(github.ref, 'main')
#    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - id: install_gpg_key
        name: Install gpg secret key
        uses: rnett/import-gpg-key@v1.0
        with:
          secret-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
      - name: Get version
        id: get_version
        uses: rnett/find-regex@v0.3
        with:
          regex: 'version ?(?:=|:) ?"?([\w.\-_]+)"?'
          files: "gradle.properties,build.gradle.kts,build.gradle"
          commands: "./gradlew properties"
      - name: Generate HTML Docs
        run: ./gradlew dokkaHtml -PsourceLinkBranch=$GITHUB_SHA
      - name: Publish docs
        uses: rnett/publish-docs@v1.1
        with:
          from: build/dokka/html
          publish-to: version+latest
          version: ${{ steps.get_version.outputs.match }}
          restore: 'false'

  publish:
    name: Publish
    if: github.event_name == 'push' && contains(github.ref, 'main')
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - id: install_gpg_key
        name: Install gpg secret key
        uses: rnett/import-gpg-key@v1.0
        with:
          secret-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          export-secring: true
      - name: Publish
        env:
          ORG_GRADLE_PROJECT_mavenCentralRepositoryPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralRepositoryUsername: ${{ secrets.SONATYPE_USERNAME }}
          GRADLE_OPTS: -Xmx2048m -XX:MaxPermSize=512m
        run: ./gradlew publish --no-daemon --no-parallel -Psigning.keyId=${{steps.install_gpg_key.outputs.key-id}} -Psigning.secretKeyRingFile=/home/runner/.gnupg/secring.gpg -Psigning.password=${{ secrets.OSSRH_GPG_KEY_PASSWORD }}
