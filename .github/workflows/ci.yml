name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, reopened, synchronize, labeled, unlabeled ]
jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages and Konan
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules*
            ~/.gradle/caches/7*
            ~/.gradle/wrapper
          key: ${{ runner.os }}-test-gradle-${{ hashFiles('**/settings.gradle*', 'buildSrc/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-test-gradle-
            ${{ runner.os }}-publish-gradle-

      - name: Use new build cache
        uses: rnett/github-actions-gradle-cache@main
        with:
          version: '0.1.0-SNAPSHOT'

      - name: Build and Test
        run: ./gradlew build -DRELEASE_SIGNING_ENABLED=false --info

      - name: Stop gradle daemon
        run: ./gradlew --stop

      - name: Cleanup Gradle Cache
        run: |
          rm -f ~/.gradle/caches/*/*.lock
          rm -f ~/.gradle/caches/*/gc.properties

  find-version:
    runs-on: ubuntu-latest
    outputs:
      snapshot: ${{ (endsWith(steps.get_version.outputs.match, 'SNAPSHOT') || endsWith(steps.get_version.outputs.match, 'snapshot')) }}
      version: ${{ steps.get_version.outputs.match }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15

      - name: Grant execute permission for gradlew
        run: |
          chmod +x gradlew

      - name: Get version
        if: github.ref == 'refs/heads/main'
        id: get_version
        uses: rnett/find-regex@v1.2
        with:
          regex: '\s*version ?(?:=|:) ?"?([\w.\-_]+)"?'
          files: "build.gradle.kts,common.gradle.kts,gradle.properties,build.gradle"
          commands: "./gradlew properties"
      - name: Print version
        run: 'echo "Version: ${{ steps.get_version.outputs.match }}"'

  create_staging_repository:
    runs-on: ubuntu-latest
    needs: [ find-version, test ]
    name: Create staging repository
    outputs:
      repository_id: ${{ steps.create.outputs.repository_id }}
    steps:
      - name: Print version
        run: |
          echo "Snapshot string: ${{ needs.find-version.outputs.snapshot }}"
          echo "Is release: ${{ needs.find-version.outputs.snapshot == 'false' }}"
      - id: create
        if: needs.find-version.outputs.snapshot == 'false'
        uses: nexus-actions/create-nexus-staging-repo@v1.1
        with:
          username: rnett
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_profile_id: ${{ secrets.SONATYPE_PROFILE_ID }}
          description: kotlin-js-action ${{ github.repository }}/${{ github.workflow }}#${{ github.run_number }}

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [ create_staging_repository, find-version ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages and Konan
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules*
            ~/.gradle/caches/7*
            ~/.gradle/wrapper
          key: ${{ runner.os }}-publish-gradle-${{ hashFiles('**/settings.gradle*', 'buildSrc/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-publish-gradle-
            ${{ runner.os }}-test-gradle-

      - name: Use new build cache
        uses: rnett/github-actions-gradle-cache@main
        with:
          version: '0.1.0-SNAPSHOT'

      - name: Generate HTML Docs
        run: ./gradlew :kotlin-js-action:dokkaHtml -PsourceLinkBranch=$GITHUB_SHA --info

      - name: Publish
        if: github.ref == 'refs/heads/main'
        env:
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: rnett
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_sonatypeRepositoryId: ${{ needs.create_staging_repository.outputs.repository_id }}
          GRADLE_OPTS: -Xmx2048m -XX:MaxPermSize=512m
        run: ./gradlew publish --no-daemon --no-parallel --info

      - name: Publish docs
        if: github.ref == 'refs/heads/main'
        uses: rnett/publish-docs@v2.6
        with:
          from: ./kotlin-js-action/build/dokka/html
          publish-to: $version,$latest
          version: ${{ needs.find-version.outputs.version }}

      - name: Stop gradle daemon
        run: ./gradlew --stop

      - name: Cleanup Gradle Cache Posix
        if: runner.os != 'Windows'
        run: |
          rm -f ~/.gradle/caches/*/*.lock
          rm -f ~/.gradle/caches/*/gc.properties

  finalize:
    runs-on: ubuntu-latest
    needs: [ create_staging_repository, find-version, publish ]
    if: ${{ always() && needs.create_staging_repository.result == 'success' && needs.find-version.outputs.snapshot == 'false' }}
    steps:
      - name: Discard
        if: ${{ needs.publish.result != 'success' }}
        uses: nexus-actions/drop-nexus-staging-repo@v1
        with:
          username: rnett
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_repository_id: ${{ needs.create_staging_repository.outputs.repository_id }}
      - name: Release
        if: ${{ needs.publish.result == 'success' }}
        uses: nexus-actions/release-nexus-staging-repo@v1.1
        with:
          username: rnett
          password: ${{ secrets.SONATYPE_PASSWORD }}
          staging_repository_id: ${{ needs.create_staging_repository.outputs.repository_id }}
          close_only: 'true'
