name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build and Test
        run: ./gradlew build -DRELEASE_SIGNING_ENABLED=false

  publishDocs:
    name: Publish Docs
    if: github.event_name == 'push' && contains(github.ref, 'main')
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
      - name: Configure git
        run: |
          git config --global credential.helper store
          git config --global user.email JNett96@gmail.com
          git config --global user.name "Ryan Nett"
          git config --global user.password ${{ github.token }}
          git config --global user.signingkey ${{ secrets.OSSRH_GPG_ID }}
          git config --global --list
      - name: Get version
        run: |
          PROJECT_VERSION=$(./gradlew properties | grep version: | cut -d ' ' -f2)
          if [[ "$PROJECT_VERSION" == *-SNAPSHOT ]]; then MAIN_DIR=snapshot; else MAIN_DIR=release; fi
          echo "MAIN_DIR=$MAIN_DIR" >> $GITHUB_ENV
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV
      - name: Generate HTML Docs
        run: ./gradlew dokkaHtml -PsourceLinkBranch=$GITHUB_SHA
      - name: Make gh-pages repo
        run: |
          git clone --single-branch --branch gh-pages https://github.com/${GITHUB_REPOSITORY}.git gh-pages
          cd gh-pages
          git checkout gh-pages
          rm -rf "$PROJECT_VERSION"
          cp -r ../build/dokka/html ./"$PROJECT_VERSION"
          rm -rf "$MAIN_DIR"
          cp -r ../build/dokka/html ./"$MAIN_DIR"
          git stage -A
          git commit -q -S -m "Docs for $PROJECT_VERSION"
          git push https://rnett:${{ github.token }}@github.com/${GITHUB_REPOSITORY}.git gh-pages

  publish:
    name: Publish
    if: github.event_name == 'push' && contains(github.ref, 'main')
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
      - id: export-secret-key
        name: Export secret key
        run: gpg --export-secret-key ${{ secrets.OSSRH_GPG_ID }} > ~/.gnupg/secring.gpg
      - name: Publish
        env:
          ORG_GRADLE_PROJECT_mavenCentralRepositoryPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralRepositoryUsername: ${{ secrets.SONATYPE_USERNAME }}
          GRADLE_OPTS: -Xmx2048m -XX:MaxPermSize=512m
        run: ./gradlew publish --no-daemon --no-parallel -Psigning.keyId=${{ secrets.OSSRH_GPG_ID }} -Psigning.secretKeyRingFile=/home/runner/.gnupg/secring.gpg -Psigning.password=${{ secrets.OSSRH_GPG_KEY_PASSWORD }}
